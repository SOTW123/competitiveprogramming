{
	"basic cpp-template": {
		"prefix": "cpp",
		"body": [
		  "#include <bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "",
		  "typedef long long ll;",
		  "typedef double long dl;",
		  "",
		  "ifstream fin(\"${TM_FILENAME_BASE}.in\");",
		  "ofstream fout(\"${TM_FILENAME_BASE}.out\");",
		  "",
		  "template<typename T>",
		  "void printV(vector<T> v);",
		  "",
		  "int main() {",
		  "    ",
		  "    return 0;",
		  "}",
		  "",
		  "",
		  "template<typename T>",
		  "void printV(vector<T> v) {",
		  "    for(T value : v) {",
		  "        cout << value << \" \";",
		  "    }",
		  "    cout << endl;",
		  "}",
		  ""
		],
		"description": "cpp-template"
	  },
	  "with-vector": {
		"prefix": "cppvector",
		"body": [
		  "#include <bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "",
		  "typedef long long ll;",
		  "typedef double long dl;",
		  "",
		  "ifstream fin(\"${TM_FILENAME_BASE}.in\");",
		  "ofstream fout(\"${TM_FILENAME_BASE}.out\");",
		  "",
		  "template<typename T>",
		  "void printV(vector<T> v);",
		  "",
		  "template<typename T>",
		  "void print2V(vector<vector<T>> v);",
		  "",
		  "int main() {",
		  "    ",
		  "    return 0;",
		  "}",
		  "",
		  "",
		  "template<typename T>",
		  "void printV(vector<T> v) {",
		  "    for(T value : v) {",
		  "        cout << value << \" \";",
		  "    }",
		  "    cout << endl;",
		  "}",
		  "template<typename T>",
		  "void print2V(vector<vector<T>> v) {",
		  "    for(auto sub_vector : v) {",
		  "        printV(sub_vector);",
		  "    }",
		  "}",
		  ""
		],
		"description": ""
	  },
	  "basic": {
		"prefix": "basic",
		"body": [
		  "#include <bits/stdc++.h>",
		  "",
		  "using namespace std;",
		  "",
		  "int main() {",
		  "    ",
		  "    return 0;",
		  "}"
		],
		"description": ""
	  },
	  "print2V": {
		"prefix": "print2V",
		"body": [
		"template<typename T>",
		  "void print2V(vector<vector<T>> v) {",
		  "    for(auto sub_vector : v) {",
		  "        printV(sub_vector);",
		  "    }",
		  "}",
		],
		"description": "yeah"
	  }
}